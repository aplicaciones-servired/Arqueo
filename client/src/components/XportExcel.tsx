import * as XLSX from 'xlsx'
import type { Arqueo } from '../types/arqueo'

// eslint-disable-next-line react/prop-types
export const BottonExportItems = ({ datos }: { datos: Arqueo }): JSX.Element => {
  const titulo = [{ A: 'Reporte de arqueo' }, {}]
  const hora = new Date()
  const infoCreacción = { A: `Fecha De Creación ${hora.toLocaleString()}` }
  const longitudes = [25, 25, 20, 10, 10, 10, 35]

  const handleDownload = (): void => {
    const tabla = [
      {
        A: 'supervisor',
        B: 'nombres',
        C: 'nombre supervisor',
        D: 'documento',
        E: 'ip',
        F: 'sucursal',
        G: 'puntodeventa',
        H: 'ventabruta ',
        I: 'baseefectivo ',
        J: 'totalingreso ',
        K: 'chancesabonados ',
        L: 'chancespreimpresos ',
        M: 'premiospagados ',
        N: 'efectivocajafuerte ',
        O: 'totalegresos ',
        P: 'totalbilletes ',
        Q: 'totalmonedas ',
        R: 'totalarqueo ',
        S: 'sobrantefaltante: ',
        T: 'canti_billete_cienmil ',
        U: 'total_billete_cienmil ',
        V: 'canti_billete_cincuentamil ',
        W: 'total_billete_cincuentamil ',
        X: 'canti_billete_veintemil ',
        Y: 'total_billete_veintemil ',
        Z: 'canti_billete_diezmil',
        AA: 'total_billete_diezmil',
        AB: 'canti_billete_cincomil ',
        AC: 'total_billete_cincomil ',
        AD: 'canti_billete_dosmil ',
        AE: 'total_billete_dosmil ',
        AF: 'canti_billete_mil ',
        AG: 'total_billete_mil',
        AH: 'canti_moneda_mil',
        AI: 'total_moneda_mil',
        AJ: 'canti_moneda_quinientos ',
        AK: 'total_moneda_quinientos ',
        AL: 'canti_moneda_docientos ',
        AM: 'total_moneda_docientos ',
        AN: 'canti_moneda_cien',
        AO: 'total_moneda_cien',
        AP: 'canti_moneda_cincuenta ',
        AQ: 'total_moneda_ciencuenta ',
        AR: 'total_efectivo ',
        AS: 'total_billete_cienmil1 ',
        AT: 'total_billete_cienmil1 ',
        AU: 'total_billete_cincuentamil1 ',
        AV: 'total_billete_cincuentamil1 ',
        AW: 'canti_billete_veintemil1 ',
        AX: 'total_billete_veintemil1 ',
        AY: 'canti_billete_diezmi1l',
        AZ: 'total_billete_diezmi1l',
        BA: 'canti_billete_cincomil1 ',
        BB: 'total_billete_cincomil1 ',
        BC: 'canti_billete_dosmil1 ',
        BD: 'total_billete_dosmil1 ',
        BE: 'canti_billete_mil1 ',
        BF: 'total_billete_mi1l',
        BG: 'canti_moneda_mi1l',
        BH: 'total_moneda_mi1l',
        BI: 'canti_moneda_quinientos1 ',
        BJ: 'total_moneda_quinientos1 ',
        BK: 'canti_moneda_docientos1 ',
        BL: 'total_moneda_docientos1 ',
        BM: 'canti_moneda_cie1n',
        BN: 'total_moneda_cie1n',
        BO: 'canti_moneda_cincuenta1 ',
        BP: 'total_moneda_ciencuenta1 ',
        BQ: 'total_efectivo1 ',
        BR: 'total_premios_pagados1 ',
        BS: 'total',
        BT: 'total_premios_pagados',
        BU: 'base_efectivos',
        BV: 'tirilla_recaudos',
        BW: 'entrega_colocador ',
        BX: 'sobrantefaltante_caja ',
        BY: 'colocador_cajafuerte',
        BZ: 'rollos_bnet ',
        CA: 'rollos_fisicos ',
        CB: 'diferencia ',
        CC: 'nombre_juego ',
        CD: 'cantidad_bnet ',
        CE: 'cantidad_fisicos ',
        CF: 'cantidad_faltante ',
        CG: 'cantidad_tiquete ',
        CH: 'descargado ',
        CI: 'nombre_juego2 ',
        CJ: 'cantidad_bnet2 ',
        CK: 'cantidad_fisicos2 ',
        CL: 'cantidad_faltante2 ',
        CM: 'cantidad_tiquete2 ',
        CN: 'descargado2 ',
        CO: 'nombre_juego3 ',
        CP: 'cantidad_bnet3 ',
        CQ: 'cantidad_fisicos3 ',
        CR: 'cantidad_faltante3 ',
        CS: 'cantidad_tiquete3 ',
        CT: 'descargado3 ',
        CU: 'nombre_juego4 ',
        CV: 'cantidad_bnet4 ',
        CW: 'cantidad_fisicos4 ',
        CX: 'cantidad_faltante4 ',
        CY: 'cantidad_tiquete4 ',
        CZ: 'descargado4 ',
        DA: 'totaldescargados ',
        DB: 'totalvalor ',
        DC: 'requisito1 ',
        DD: 'observacion1',
        DE: 'requisito2 ',
        DF: 'observacion2',
        DG: 'requisito3 ',
        DH: 'observacion3 ',
        DI: 'requisito4 ',
        DJ: 'observacion4 ',
        DK: 'requisito5 ',
        DL: 'observacion5 ',
        DM: 'requisito6 ',
        DN: 'observacion6 ',
        DO: 'requisito7 ',
        DP: 'observacion7 ',
        DQ: 'requisito8 ',
        DR: 'observacion8 ',
        DS: 'requisito9 ',
        DT: 'observacion9 ',
        DU: 'requisito10 ',
        DV: 'observacion10',
        DW: 'requisito11 ',
        DX: 'observacion11',
        DY: 'requisito12 ',
        DZ: 'observacion12',
        EA: 'requisito13 ',
        EB: 'observacion13',
        EC: 'requisito14 ',
        ED: 'observacion14',
        EE: 'requisito15 ',
        EF: 'observacion15',
        EG: 'requisito16 ',
        EH: 'observacion16',
        EI: 'requisito17 ',
        EJ: 'observacion17',
        EK: 'requisito18 ',
        EL: 'observacion18',
        EM: 'requisito19 ',
        EN: 'observacion19',
        EO: 'requisito20 ',
        EP: 'observacion20',
        EQ: 'requisito21 ',
        ER: 'observacion21',
        ES: 'requisito22 ',
        ET: 'observacion22',
        EU: 'requisito23 ',
        EV: 'observacion23',
        EW: 'requisito24 ',
        EX: 'observacion24',
        EY: 'requisito25 ',
        EZ: 'observacion25',
        FA: 'requisito26 ',
        FB: 'observacion26',
        FC: 'requisito27 ',
        FD: 'observacion27',
        FE: 'requisito28 ',
        FF: 'observacion28',
        FG: 'requisito29 ',
        FH: 'requisito30 ',
        FI: 'fechavisita ',
        FJ: 'horavisita ',
        FK: 'latitud ',
        FL: 'longitud '
      }
    ]

    // eslint-disable-next-line react/prop-types
    tabla.push({
      A: datos.supervisor,
      B: datos.nombres,
      C: datos.nombre_supervisor,
      D: datos.documento.toString(),
      E: datos.ip.toString(),
      F: datos.sucursal.toString(),
      G: datos.puntodeventa.toString(),
      H: datos.ventabruta.toString(),
      I: datos.baseefectivo.toString(),
      J: datos.totalingreso.toString(),
      K: datos.chancesabonados.toString(),
      L: datos.chancespreimpresos.toString(),
      M: datos.premiospagados.toString(),
      N: datos.efectivocajafuerte.toString(),
      O: datos.totalegresos.toString(),
      P: datos.totalbilletes.toString(),
      Q: datos.totalmonedas.toString(),
      R: datos.totalarqueo.toString(),
      S: datos.sobrantefaltante.toString(),
      T: datos.canti_billete_cienmil.toString(),
      U: datos.total_billete_cienmil.toString(),
      V: datos.canti_billete_cincuentamil.toString(),
      W: datos.total_billete_cincuentamil.toString(),
      X: datos.canti_billete_veintemil.toString(),
      Y: datos.total_billete_veintemil.toString(),
      Z: datos.canti_billete_diezmil.toString(),
      AA: datos.total_billete_diezmil.toString(),
      AB: datos.canti_billete_cincomil.toString(),
      AC: datos.total_billete_cincomil.toString(),
      AD: datos.canti_billete_dosmil.toString(),
      AE: datos.total_billete_dosmil.toString(),
      AF: datos.canti_billete_mil.toString(),
      AG: datos.total_billete_mil.toString(),
      AH: datos.canti_moneda_mil.toString(),
      AI: datos.total_moneda_mil.toString(),
      AJ: datos.canti_moneda_quinientos.toString(),
      AK: datos.total_moneda_quinientos.toString(),
      AL: datos.canti_moneda_docientos.toString(),
      AM: datos.total_moneda_docientos.toString(),
      AN: datos.canti_moneda_cien.toString(),
      AO: datos.total_moneda_cien.toString(),
      AP: datos.canti_moneda_cincuenta.toString(),
      AQ: datos.total_moneda_ciencuenta.toString(),
      AR: datos.total_efectivo.toString(),
      AS: datos.total_billete_cienmil1.toString(),
      AT: datos.total_billete_cienmil1.toString(),
      AU: datos.total_billete_cincuentamil1.toString(),
      AV: datos.total_billete_cincuentamil1.toString(),
      AW: datos.canti_billete_veintemil1.toString(),
      AX: datos.total_billete_veintemil1.toString(),
      AY: datos.canti_billete_diezmil.toString(),
      AZ: datos.total_billete_diezmil.toString(),
      BA: datos.canti_billete_cincomil1.toString(),
      BB: datos.total_billete_cincomil1.toString(),
      BC: datos.canti_billete_dosmil1.toString(),
      BD: datos.total_billete_dosmil1.toString(),
      BE: datos.canti_billete_mil1.toString(),
      BF: datos.total_billete_mil.toString(),
      BG: datos.canti_moneda_mil.toString(),
      BH: datos.total_moneda_mil.toString(),
      BI: datos.canti_moneda_quinientos1.toString(),
      BJ: datos.total_moneda_quinientos1.toString(),
      BK: datos.canti_moneda_docientos1.toString(),
      BL: datos.total_moneda_docientos1.toString(),
      BM: datos.canti_moneda_cien.toString(),
      BN: datos.total_moneda_cien.toString(),
      BO: datos.canti_moneda_cincuenta1.toString(),
      BP: datos.total_moneda_ciencuenta1.toString(),
      BQ: datos.total_efectivo1.toString(),
      BR: datos.total_premios_pagados1.toString(),
      BS: datos.total.toString(),
      BT: datos.total_premios_pagados.toString(),
      BU: datos.base_efectivos.toString(),
      BV: datos.tirilla_recaudos.toString(),
      BW: datos.entrega_colocador.toString(),
      BX: datos.sobrantefaltante_caja.toString(),
      BY: datos.colocador_cajafuerte.toString(),
      BZ: datos.rollos_bnet.toString(),
      CA: datos.rollos_fisicos.toString(),
      CB: datos.diferencia.toString(),
      CC: datos.nombre_juego.toString(),
      CD: datos.cantidad_bnet.toString(),
      CE: datos.cantidad_fisicos.toString(),
      CF: datos.cantidad_faltante.toString(),
      CG: datos.cantidad_tiquete.toString(),
      CH: datos.descargado.toString(),
      CI: datos.nombre_juego2.toString(),
      CJ: datos.cantidad_bnet2.toString(),
      CK: datos.cantidad_fisicos2.toString(),
      CL: datos.cantidad_faltante2.toString(),
      CM: datos.cantidad_tiquete2.toString(),
      CN: datos.descargado2.toString(),
      CO: datos.nombre_juego3.toString(),
      CP: datos.cantidad_bnet3.toString(),
      CQ: datos.cantidad_fisicos3.toString(),
      CR: datos.cantidad_faltante3.toString(),
      CS: datos.cantidad_tiquete3.toString(),
      CT: datos.descargado3.toString(),
      CU: datos.nombre_juego4.toString(),
      CV: datos.cantidad_bnet4.toString(),
      CW: datos.cantidad_fisicos4.toString(),
      CX: datos.cantidad_faltante4.toString(),
      CY: datos.cantidad_tiquete4.toString(),
      CZ: datos.descargado4.toString(),
      DA: datos.totaldescargados.toString(),
      DB: datos.totalvalor.toString(),
      DC: datos.requisito1.toString(),
      DD: datos.observacion1,
      DE: datos.requisito2,
      DF: datos.observacion2,
      DG: datos.requisito3,
      DH: datos.observacion3,
      DI: datos.requisito4,
      DJ: datos.observacion4,
      DK: datos.requisito5,
      DL: datos.observacion5,
      DM: datos.requisito6,
      DN: datos.observacion6,
      DO: datos.requisito7,
      DP: datos.observacion7,
      DQ: datos.requisito8,
      DR: datos.observacion8,
      DS: datos.requisito9,
      DT: datos.observacion9,
      DU: datos.requisito10,
      DV: datos.observacion10,
      DW: datos.requisito11,
      DX: datos.observacion11,
      DY: datos.requisito12,
      DZ: datos.observacion12,
      EA: datos.requisito13,
      EB: datos.observacion13,
      EC: datos.requisito14,
      ED: datos.observacion14,
      EE: datos.requisito15,
      EF: datos.observacion15,
      EG: datos.requisito16,
      EH: datos.observacion16,
      EI: datos.requisito17,
      EJ: datos.observacion17,
      EK: datos.requisito18,
      EL: datos.observacion18,
      EM: datos.requisito19,
      EN: datos.observacion19,
      EO: datos.requisito20,
      EP: datos.observacion20,
      EQ: datos.requisito21,
      ER: datos.observacion21,
      ES: datos.requisito22,
      ET: datos.observacion22,
      EU: datos.requisito23,
      EV: datos.observacion23,
      EW: datos.requisito24,
      EX: datos.observacion24,
      EY: datos.requisito25,
      EZ: datos.observacion25,
      FA: datos.requisito26,
      FB: datos.observacion26,
      FC: datos.requisito27,
      FD: datos.observacion27,
      FE: datos.requisito28,
      FF: datos.observacion28,
      FG: datos.requisito29,
      FH: datos.requisito30,
      FI: datos.fechavisita,
      FJ: datos.horavisita,
      FK: datos.latitud,
      FL: datos.longitud
    })

    const dataFinal = [...titulo, infoCreacción, ...tabla]

    setTimeout(() => {
      creandoArchivo(dataFinal)
    }, 1000)
  }

  const creandoArchivo = (dataFinal: unknown[]): void => {
    const libro = XLSX.utils.book_new()
    const hoja = XLSX.utils.json_to_sheet(dataFinal, { skipHeader: true })

    hoja['!merges'] = [
      XLSX.utils.decode_range('A1:G1'),
      XLSX.utils.decode_range('A2:G2'),
      XLSX.utils.decode_range('A3:G3')
    ]

    const simpiedades: XLSX.ColInfo[] | Array<{ width: number }> | undefined = []

    longitudes.forEach((col) => {
      simpiedades.push({ width: col })
    })

    hoja['!cols'] = simpiedades
    XLSX.utils.book_append_sheet(libro, hoja, 'Items')
    XLSX.writeFile(libro, 'ARQUEO.xlsx')
  }

  return (

    <button
      type="button"
      onClick={handleDownload}
      className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg "
    >
      Exportar a Excel
    </button>

  )
}
